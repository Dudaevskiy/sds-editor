'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var extend = _interopDefault(require('just-extend'));
var highlight = _interopDefault(require('embed-plugin-highlight'));
var emoji = _interopDefault(require('embed-plugin-emoji'));
var github = _interopDefault(require('embed-plugin-github'));
var noEmbed = _interopDefault(require('embed-plugin-noembed'));
var url = _interopDefault(require('embed-plugin-url'));
var youtube = _interopDefault(require('embed-plugin-youtube'));
var facebook = _interopDefault(require('embed-plugin-facebook'));
var media = _interopDefault(require('embed-plugin-media'));
var instagram = _interopDefault(require('embed-plugin-instagram'));

var index = function (options) {
    const defaultOptions = {
        exclude: []
    };
    const presetOptions = extend({}, defaultOptions, options);
    const pluginNames = [url,emoji,github,noEmbed,youtube,facebook,highlight,media,
        instagram];
    const plugins = pluginNames.map(plugin => {
        const {id} = plugin;
        const pluginOptions = presetOptions[id];
        if (presetOptions.exclude.indexOf(plugin.id) === -1) {
            if (id === "youtube" || id === "map") {
                return plugin(extend({}, {
                    gAuthKey: options.gAuthKey
                }, pluginOptions));
            } else if (id === "noEmbed") {
                return plugin(extend({}, pluginOptions, {
                    exclude: ["youtube"]
                }));
            }
            return plugin(pluginOptions);
        }
        return null;
    });
    return plugins.filter(plugin => !(!plugin));
};

module.exports = index;
